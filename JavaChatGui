package JavaChat;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ItemEvent;
import java.awt.event.WindowAdapter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

import com.sun.glass.events.WindowEvent;

/**
 *
 * @author chanqun
 */
public class JavaChatGui extends javax.swing.JFrame implements Runnable {

	/**
	 * Creates new form JavaChatGui
	 */
	String userId, chatName, host;
	final int port = 9999;
	Socket sock;
	ObjectOutputStream out;
	ObjectInputStream in;
	boolean isSendOne = false; // 귓속말 보내기라면 true값을 가질 예정
	Color fontCr = Color.black; // 글자색
	DefaultTableModel userModel;

	boolean isStop = false;// 스레드

	public static final int LOGIN = 0;
	public static final int ENTER = 1;
	public static final int LOGOUT = -1;
	public static final int EXIT = -2;

	StyledDocument doc;// 텍스트 페인의 문서모델
	SimpleAttributeSet attr;

	// imoticon
	ImageIcon emo1 = new ImageIcon("images/imoticon1.jpg");
	ImageIcon emo2 = new ImageIcon("images/imoticon.2.jpg");
	ImageIcon emo3 = new ImageIcon("images/imoticon3.jpg");
	ImageIcon emo4 = new ImageIcon("images/imoticon4.jpg");
	ImageIcon emo5 = new ImageIcon("images/imoticon5.jpg");
	ImageIcon emo6 = new ImageIcon("images/imoticon6.jpg");

	ImageIcon icons[] = { emo1, emo2, emo3, emo4, emo5, emo6 };
	JButton buttons[] = new JButton[icons.length];
	JFrame popF = new JFrame("imoticon");

	public JavaChatGui() {
		setTitle("Chat v1.1");
		initComponents();
		userModel = (DefaultTableModel) userTable.getModel();
		this.doc = tpMsg.getStyledDocument();

		//imoticon
		Container cp = popF.getContentPane();
		cp.setLayout(new GridLayout(3, 0));// 0 : 열은 가변적으로 됨.

		for (int i = 0; i < icons.length; i++) {
			buttons[i] = new JButton(icons[i]);
			cp.add(buttons[i]);
			buttons[i].setActionCommand(String.valueOf(i));
			buttons[i].addActionListener((e) -> {
				try {
					out.writeUTF("300|" + e.getActionCommand());
					out.flush();
				} catch (Exception e2) {
					// TODO: handle exception
					System.out.println("imociton exception" + e);
				}
			});
		}

	}

	/*
	 * 탭페인의 활성화 여부를 결정하는 메소드
	 */
	public void tabEnable(int enable, int disable) {
		tabPane.setEnabledAt(enable, true);
		tabPane.setEnabledAt(disable, false);
		tabPane.setSelectedIndex(enable);

		if (enable == ENTER) {
			tfInput.requestFocus();
		} else if (enable == LOGIN) {
			tfId.requestFocus();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		tabPane = new javax.swing.JTabbedPane();
		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jPanel4 = new javax.swing.JPanel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		tfHost = new javax.swing.JTextField();
		tfChatName = new javax.swing.JTextField();
		tfId = new javax.swing.JTextField();
		btCon = new javax.swing.JButton();
		btCancel = new javax.swing.JButton();
		jPanel2 = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		tpMsg = new javax.swing.JTextPane();
		tfInput = new javax.swing.JTextField();
		chk = new javax.swing.JCheckBox();
		comboColor = new javax.swing.JComboBox();
		lb = new javax.swing.JLabel();
		btEmoti = new javax.swing.JButton();
		jPanel3 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		userTable = new javax.swing.JTable();
		jPanel5 = new javax.swing.JPanel();
		jLabel6 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		lbId = new javax.swing.JLabel();
		lbChatName = new javax.swing.JLabel();
		btRename = new javax.swing.JButton();
		btLogout = new javax.swing.JButton();
		btExit = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		// 창닫기 이벤트 처리
		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				isStop = true;
				exitProcess();
			}
		});
		jPanel1.setBackground(new java.awt.Color(204, 204, 204));
		jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));

		jLabel1.setFont(new java.awt.Font("나눔스퀘어 Bold", 1, 24)); // NOI18N
		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel1.setText("Chanqun Chat v1.1");

		jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javachat/11.PNG"))); // NOI18N

		jLabel3.setText("아이디 :");

		jLabel4.setText("대화명 :");

		jLabel5.setText("호스트 :");

		tfHost.setText("192.168.43.53");

		btCon.setMnemonic('C');
		btCon.setText("연 결");
		btCon.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btConActionPerformed(evt);
			}
		});

		btCancel.setMnemonic('R');
		btCancel.setText("취 소");
		btCancel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btCancelActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout
				.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel4Layout.createSequentialGroup().addGap(28, 28, 28)
								.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jLabel5).addComponent(jLabel4).addComponent(jLabel3))
								.addGap(18, 18, 18)
								.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(tfHost, javax.swing.GroupLayout.PREFERRED_SIZE, 324,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(tfChatName, javax.swing.GroupLayout.PREFERRED_SIZE, 324,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 324,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap(43, Short.MAX_VALUE))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel4Layout.createSequentialGroup()
										.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(btCon, javax.swing.GroupLayout.PREFERRED_SIZE, 75,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(32, 32, 32)
										.addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 75,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(126, 126, 126)));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup().addGap(30, 30, 30)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 52,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel3))
						.addGap(32, 32, 32)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(tfChatName, javax.swing.GroupLayout.PREFERRED_SIZE, 52,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel4))
						.addGap(31, 31, 31)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel5).addComponent(tfHost, javax.swing.GroupLayout.PREFERRED_SIZE, 52,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(30, 30, 30)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btCon, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(52, Short.MAX_VALUE)));

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						jPanel1Layout.createSequentialGroup().addContainerGap()
								.addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGap(21, 21, 21))
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(107, 107, 107)
						.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel1)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(43, 43, 43)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(26, 26, 26)
						.addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(43, Short.MAX_VALUE)));

		tabPane.addTab("로그인", jPanel1);

		tpMsg.setEditable(false);
		tpMsg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
		jScrollPane2.setViewportView(tpMsg);

		tfInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
		tfInput.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tfInputActionPerformed(evt);
			}
		});

		chk.setText("귓속말");
		chk.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				chkItemStateChanged(evt);
			}
		});

		comboColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "검 정", "파 랑", "빨 강", "초 록" }));
		comboColor.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				comboColorItemStateChanged(evt);
			}
		});

		lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		lb.setText("가");
		lb.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		btEmoti.setText("이모티콘");
		btEmoti.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btEmotiActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(tfInput, javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
						.addContainerGap())
				.addGroup(jPanel2Layout.createSequentialGroup().addGap(35, 35, 35).addComponent(chk).addGap(18, 18, 18)
						.addComponent(comboColor, javax.swing.GroupLayout.PREFERRED_SIZE, 67,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(lb, javax.swing.GroupLayout.PREFERRED_SIZE, 23,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18).addComponent(btEmoti).addContainerGap(177, Short.MAX_VALUE)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(tfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 56,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(27, 27, 27)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(chk)
								.addComponent(comboColor, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lb, javax.swing.GroupLayout.PREFERRED_SIZE, 23,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btEmoti))
						.addContainerGap(31, Short.MAX_VALUE)));

		tabPane.addTab("채팅방", jPanel2);

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 498, Short.MAX_VALUE));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 523, Short.MAX_VALUE));

		tabPane.addTab("환경설정", jPanel3);

		userTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "아이디", "대화명" }));
		userTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				userTableMousePressed(evt);
			}
		});
		jScrollPane1.setViewportView(userTable);

		jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("My Info"));

		jLabel6.setText("아 이 디 :");

		jLabel7.setText("대 화 명 :");

		lbId.setText("______");

		lbChatName.setText("______");

		javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
		jPanel5.setLayout(jPanel5Layout);
		jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel5Layout.createSequentialGroup().addGap(117, 117, 117)
						.addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel5Layout.createSequentialGroup().addComponent(jLabel7).addGap(18, 18, 18)
										.addComponent(lbChatName))
								.addGroup(jPanel5Layout.createSequentialGroup().addComponent(jLabel6).addGap(18, 18, 18)
										.addComponent(lbId)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel5Layout.createSequentialGroup().addGap(27, 27, 27)
						.addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel6).addComponent(lbId))
						.addGap(34, 34, 34)
						.addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel7).addComponent(lbChatName))
						.addContainerGap(35, Short.MAX_VALUE)));

		btRename.setMnemonic('L');
		btRename.setText("대화명 변경");
		btRename.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btRenameActionPerformed(evt);
			}
		});

		btLogout.setMnemonic('Q');
		btLogout.setText("퇴 장");
		btLogout.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btLogoutActionPerformed(evt);
			}
		});

		btExit.setMnemonic('X');
		btExit.setText("종 료");
		btExit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btExitActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(25, 25, 25)
				.addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 503,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
						.createSequentialGroup().addGap(28, 28, 28)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
								.addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
						.addGroup(layout.createSequentialGroup().addGap(75, 75, 75)
								.addComponent(btLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(37, 37, 37)
								.addComponent(btRename, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(31, 31, 31).addComponent(btExit, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE)))
				.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(42, 42, 42)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 552,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGroup(layout.createSequentialGroup()
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(btRename, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(btLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(btExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
												javax.swing.GroupLayout.PREFERRED_SIZE))))
				.addContainerGap(37, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void btConActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btConActionPerformed
		// 1. 입력한 값 받기
		userId = tfId.getText();
		chatName = tfChatName.getText();
		host = tfHost.getText();
		// 2. 유효성 체크
		if (userId == null || chatName == null || host == null || userId.trim().isEmpty() || chatName.trim().isEmpty()
				|| host.trim().isEmpty()) {
			showMsg("아이디, 대화명, 접속할 서버 ip주소를 입력하세요");
			return;
		}
		// 3. 채팅 입장
		isStop = false;
		chatEnter();
		tabEnable(ENTER, LOGIN);
		// 채팅방은 활성화 로그인패널은 비활성화
		lbId.setText(this.userId);
		lbChatName.setText(this.chatName);
		setTitle(this.getTitle() + "[" + chatName + "]");
		
		System.out.println();
	}// GEN-LAST:event_btConActionPerformed

	private void chatEnter() {
		try {
			sock = new Socket(host, port);
			tpMsg.setText("##채팅 서버에 접속##\r\n");
			out = new ObjectOutputStream(sock.getOutputStream());
			in = new ObjectInputStream(sock.getInputStream());
			// 서버가 보내오는 메시지를 듣는 스레드를 동작
			Thread listener = new Thread(this);
			listener.start();
			// 입장 메시지를 보낸다.
			out.writeUTF("100|" + userId + "|" + chatName);
			out.flush();
		} catch (Exception e) {
			System.out.println("chatEnter() 예외:" + e);
		}
	}// chatEnter() ------------------

	@Override
	public void run() {
		// 서버가 보내오는 메시지를 계속 듣고 tpMsg에 출력한다.
		while (!isStop) {
			String sMsg;
			try {
				sMsg = in.readUTF();
				System.out.println("serverMsg>>" + sMsg);
				if (sMsg == null)
					return;
				// 서버가 보내오는 메시지를 계속 듣고
				// 이를 분석(파싱)하는 메소드를 호출한다.
				parsing(sMsg);
			} catch (IOException e) {
				System.out.println("클run()에서 예외: " + e);
			}
		}
	}

	private void parsing(String sMsg) {
		String[] tokens = sMsg.split("\\|");
		switch (tokens[0]) {
		case "100":// 100|아이디|대화명
		{
			userModel = (DefaultTableModel) userTable.getModel();
			String[] rowData = { tokens[1], tokens[2] };
			userModel.addRow(rowData);
			break;
		}
		case "300": {
			String from = tokens[1];
			String emoNo = tokens[2];
			int i = Integer.parseInt(emoNo.trim());
			showEmoticon(from, icons[i]);
		}
			break;
		case "400": {
			String from = tokens[1];
			String fontRgb = tokens[2];
			String fromMsg = tokens[3];
			// showChat(from, fontRgb, fromMsg);
			showCacaoStyle(from, fontRgb, fromMsg);
		}
			break;
		case "500": {
			String from = tokens[1];
			String oneMsg = tokens[2];
			String str = "[" + from + "]님이 보낸 귓속말" + oneMsg + "\n";
			// showChat(Color.gray, Color.BLUE, str);
			showCacaoStyle("other", Color.pink, Color.blue, str);
		}
			break;
		case "700": {// 대화명이 중복될 경우
			showMsg(chatName + "이란 대화명은 이미 존재");
			//
			exitChat(LOGOUT);
		
		}
			break;	
			// LOGOUT값이 넘어오면 퇴장처리, EXIT값이 오면 종료처리
		case "800": {
			String logoutId = tokens[1];
			String logoutChatName = tokens[2];
			logout(logoutId, logoutChatName, LOGOUT);

		}
			break;
		case "900": {
			String exitId = tokens[1];
			String exitChatName = tokens[2];
			logout(exitId, exitChatName, EXIT);
		}
			break;

		}
	}// parsing()-------------------

	private synchronized void showCacaoStyle(String who, Color bgcr, Color fgcr, String msg) {
		// TODO Auto-generated method stub
		// me or other
		JLabel lb = new JLabel(msg);
		lb.setOpaque(true);// 라벨배경색 투명
		lb.setPreferredSize(new Dimension(700, 50));
		lb.setBackground(bgcr);
		lb.setForeground(fgcr);

		if (who.equals("me")) {
			// 내가 보낸 귓속말일 경우 오른쪽 정렬
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_RIGHT);
		} else {
			// 다른 사람일 경우
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_LEFT);
		}
		setStyle(lb, msg, attr);
	}//

	/** 대화 메세지를 스타일 적용하여 라벨 형태로 출력하는 메소드 */
	private synchronized void showCacaoStyle(String from, String fontRgb, String fromMsg) {
		// TODO Auto-generated method stub
		String msg = "" + from + ">>" + fromMsg + "\r\n";
		JLabel lb = new JLabel(msg);
		lb.setOpaque(true);
		lb.setPreferredSize(new Dimension(700, 50));
		lb.setForeground(fontCr);
		if (from.equals(this.chatName)) {
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_RIGHT);
			lb.setBackground(Color.yellow);

		} else {
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_LEFT);
			lb.setBackground(Color.gray);
		}
		setStyle(lb, msg, attr);
	}

	/** 텍스트페인에 이모티콘을 출력해 보여주는 메소드 */
	private synchronized void showEmoticon(String from, ImageIcon icon) {
		// TODO Auto-generated method stub
		String msg = "[" + from + "}님 \r\n";
		JLabel lb = new JLabel(msg, icon, JLabel.CENTER);
		lb.setPreferredSize(new Dimension(700, 400));
		// lb의 폭은 700, 높이 90 문자열만큼만 차지함.
		lb.setHorizontalTextPosition(JLabel.CENTER);
		lb.setVerticalTextPosition(JLabel.TOP);

		// 보낸사람이 나라면 오른쪽
		if (from.equals(chatName)) {
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_RIGHT);
		}

		// 내가 아니면 왼쪽
		else {
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_LEFT);
		}
		setStyle(lb, msg, attr);

	}

	/** 텍스트 페인에 스타일 적용하여 라벨을 끼워넣는 메소드 */
	private void setStyle(JLabel lb2, String msg, SimpleAttributeSet attr) {
		// TODO Auto-generated method stub
		int offset = doc.getEndPosition().getOffset() - 1;
		tpMsg.setCaretPosition(offset);
		tpMsg.insertComponent(lb2);

		// JLabel은 문자열, 아이콘 형태 등 다양하게 표현가능.
		String enter = "\r\n";// 엔터값 끼워넣기
		offset = tpMsg.getCaretPosition();
		try {
			doc.insertString(offset, enter, attr);
		} catch (BadLocationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		// 문단 정렬방식
		doc.setParagraphAttributes(offset + 2, msg.length(), attr, true);
		tpMsg.setCaretPosition(offset + 2);

	}

	private void logout(String id, String ChatName, int mode) {
		// 1. 본인이 아닌 경우
		// userModel에서 퇴장하는 클의 id를 제거 tpMsg "...님이 퇴장합니다.를 출력
		String exitId = "", exitCname = "";
		for (int i = 0; i < userModel.getRowCount(); i++) {
			String cid = userModel.getValueAt(i, 0).toString();
			if (cid.equals(id)) {
				// 클의 아이디와 퇴장하려는 사람의 id와 같다면 model에서 제거
				exitId = cid;
				exitCname = userModel.getValueAt(i, 1).toString();
				userModel.removeRow(i);
				break;
			}
		} // for end

		if (mode == LOGOUT) {// LOGOUT
			String str = exitId + "[" + exitCname + "]님이 퇴장하였습니다." + "\n";
			this.showChat(Color.white, Color.RED, str);
		} else {// EXIT
			String str = exitId + "[" + exitCname + "]님이 접속을 해제하였습니다." + "\n";
			this.showChat(Color.RED, Color.WHITE, str);
		}

		// 2. 퇴장하는 고객이 본인일 경우
		if (exitId.equals(this.userId)) {
			isStop = true;
			this.exitChat(mode);
		}
	}

	/** 클라이언트가 전달한 메세지를 JTextPane에 스타일을 적용하여 표현하는 메소드 */
	private void showChat(String from, String fontRgb, String fromMsg) {
		// TODO Auto-generated method stub
		synchronized (this) {
			int rgb = Integer.parseInt(fontRgb.trim());
			attr = new SimpleAttributeSet();
			StyleConstants.setForeground(attr, new Color(rgb));
			StyleConstants.setFontSize(attr, 16);
			StyleConstants.setFontFamily(attr, "sans-serif");

			int offset = doc.getEndPosition().getOffset() - 1;
			tpMsg.setCaretPosition(offset);
			String msg = from + ">>" + fromMsg + "\r\n";

			try {
				doc.insertString(offset, msg, attr);
			} catch (BadLocationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
	}

	private void exitChat(int mode) {
		// TODO Auto-generated method stub
		try {
			isStop = true;
			lbId.setText("");
			lbChatName.setText("");
			if (out != null)
				out.close();
			if (in != null)
				in.close();
			if (sock != null) {
				sock.close();
				sock = null;
			}
			switch (mode) {
			case LOGOUT:
				userModel.setDataVector(null, new String[] { "아이디", "대화명" });
				this.tabEnable(LOGIN, ENTER);
				break;
			case EXIT:
				this.dispose();
				System.exit(0);
				break;
			}
		} catch (Exception e) {
			System.out.println("예외발생 " + e.getMessage());
		}

	}

	public void showMsg(String msg) {
		JOptionPane.showMessageDialog(this, msg);
	}

	private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btCancelActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_btCancelActionPerformed

	private void btLogoutActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btLogoutActionPerformed
		// TODO add your handling code here:
		int yn = showConfirmMsg("퇴장할까요?");
		if (yn == JOptionPane.YES_OPTION && out != null) {
			try {
				out.writeUTF("800|" + userId + "|" + chatName);
				out.flush();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				System.out.println("exit exception" + e.getMessage());
			}
		}
	}// GEN-LAST:event_btLogoutActionPerformed

	private int showConfirmMsg(String msg) {
		// TODO Auto-generated method stub
		int n = JOptionPane.showConfirmDialog(this, msg, "confirm", JOptionPane.YES_NO_OPTION);
		return n;
	}

	private void btRenameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btRenameActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_btRenameActionPerformed

	private void btExitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btExitActionPerformed
		// TODO add your handling code here:
		exitProcess();

	}// GEN-LAST:event_btExitActionPerformed

	private void exitProcess() {
		// TODO Auto-generated method stub
		int yn = showConfirmMsg("종료할까요?");
		if (yn == JOptionPane.YES_OPTION) {
			// 채팅서버에 접속하고 종료하는 경우
			if (sock != null) {
				try {
					out.writeUTF("900|" + userId + "|" + chatName);
					out.flush();
				} catch (Exception e) {
					// TODO: handle exception
					System.out.println("exit exception" + e.getMessage());
				}
			}
			// 채팅서버에 접속하 기 전에 종료하는 경우
			else {
				System.exit(0);
			}
		}
	}

	private void tfInputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tfInputActionPerformed
		// TODO add your handling code here:

		// tfInput에 입력한 값 얻어오기
		String sendmsg = tfInput.getText();
		if (sendmsg == null && sendmsg.trim().isEmpty())
			sendmsg = " ";
		
		sendMessage(sendmsg);
		tfInput.setText("");
		tfInput.requestFocus();

	}// GEN-LAST:event_tfInputActionPerformed

	/** 서버쪽에 메세지를 보내는 메소드 */
	private void sendMessage(String msg) {
		// TODO Auto-generated method stub
		/*
		 * '|' 프로토콜에서 사용하는 구분 문자 => 채팅 문자 내용에 |가 있으면 프로토콜이 망가지게 됨 msg 중에 |가 있으면 비슷한 문자로
		 * 대체
		 */
		msg = msg.replace('|', 'ㅣ');
		try {
			// 귓속말인 경우
			if (isSendOne) {
				// 테이블에서 귓속말할 대상자를 선택해야함
				int row = userTable.getSelectedRow();
				if (row < 0) {
					// 선택한 행이 없으면 -1반환
					showMsg("귓속말할 대상을 선택");
					return;
				}
				// 500|받을 사람 대화명 | 귓속말 메세지
				String toChatName = userTable.getValueAt(row, 1).toString();
				if (this.chatName.equals(toChatName)) {
					showMsg("자기자신을 제외한 사람을 선택하시오");
					return;
				}
				String sendMsg = "500|" + toChatName + "|" + msg;
				out.writeUTF(sendMsg);
				out.flush();

				String str = "[" + toChatName + "]님에게 보내는 귓속말" + msg + "\n";
				showCacaoStyle("me", Color.yellow, new Color(227, 0, 227), str);
			}
			// 아닌 경우
			else {
				int rgb = fontCr.getRGB();
				String sendMsg = "400|" + rgb + "|" + msg;
				out.writeUTF(sendMsg);
				out.flush();
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	/** 귓속말일때 스타일을 적용해서 보여주는 메소드 */
	private synchronized void showChat(Color bgcr, Color fgcr, String msg) {
		// TODO Auto-generated method stub
		attr = new SimpleAttributeSet();
		StyleConstants.setForeground(attr, fgcr);
		StyleConstants.setBackground(attr, bgcr);
		StyleConstants.setFontSize(attr, 16);
		tpMsg.setCaretPosition(doc.getEndPosition().getOffset() - 1);
		int offset = tpMsg.getCaretPosition();
		try {
			doc.insertString(offset, msg, attr);
		} catch (BadLocationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}// -----------------------------------------------------

	private void chkItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_chkItemStateChanged
		// TODO add your handling code here:
		int state = evt.getStateChange();
		// 귓속말
		if (state == ItemEvent.SELECTED) {
			isSendOne = true;
		}
		// 일반
		else {
			isSendOne = false;
		}

	}// GEN-LAST:event_chkItemStateChanged

	private void comboColorItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_comboColorItemStateChanged
		// TODO add your handling code here:
		int state = evt.getStateChange();
		if (state == ItemEvent.SELECTED) {
			int index = comboColor.getSelectedIndex();
			switch (index) {
			case 0:
				fontCr = Color.black;
				break;
			case 1:
				fontCr = Color.blue;
				break;
			case 2:
				fontCr = Color.red;
				break;
			case 3:
				fontCr = Color.green;
				break;
			}
			lb.setForeground(fontCr);
		}

	}// GEN-LAST:event_comboColorItemStateChanged

	private void btEmotiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btEmotiActionPerformed
		// TODO add your handling code here:
		popF.pack();
		popF.setLocation(this.getWidth(), 0);
		popF.setVisible(true);
	}// GEN-LAST:event_btEmotiActionPerformed

	private void userTableMousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_userTableMousePressed
		// TODO add your handling code here:
	}// GEN-LAST:event_userTableMousePressed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Windows".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(JavaChatGui.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(JavaChatGui.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(JavaChatGui.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(JavaChatGui.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new JavaChatGui().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btCancel;
	private javax.swing.JButton btCon;
	private javax.swing.JButton btEmoti;
	private javax.swing.JButton btExit;
	private javax.swing.JButton btLogout;
	private javax.swing.JButton btRename;
	private javax.swing.JCheckBox chk;
	private javax.swing.JComboBox comboColor;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JLabel lb;
	private javax.swing.JLabel lbChatName;
	private javax.swing.JLabel lbId;
	private javax.swing.JTabbedPane tabPane;
	private javax.swing.JTextField tfChatName;
	private javax.swing.JTextField tfHost;
	private javax.swing.JTextField tfId;
	private javax.swing.JTextField tfInput;
	private javax.swing.JTextPane tpMsg;
	private javax.swing.JTable userTable;
	// End of variables declaration//GEN-END:variables
}
